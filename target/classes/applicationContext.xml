<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


    
       
    <!-- 扫描controller包 -->
	<context:component-scan base-package="com.crud" >
	<!-- 不扫描控制器 -->
<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>

	</context:component-scan>
       
       
       	<!-- 加载数据库配置的属性文件 -->	
		<context:property-placeholder location="classpath:db.properties"/>
       
		<!-- dataSource数据源 -->
    <bean id="pooldataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
  		<property name="username" value="${jdbc.username}"></property>
  		<property name="password" value="${jdbc.password}"></property>
  		<property name="driverClassName" value="${jdbc.driverClassName}"></property>
  		<property name="url" value="${jdbc.url}"></property>
		</bean>       
       
		<!-- mybatis的整合 -->
		<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="pooldataSource"/>
			<!-- 整合mybatis，包扫描mapper文件 -->
			<property name="configLocation" value="classpath:mybatis-config.xml"></property>
			<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
		</bean>
		
		
		<!-- 将mybatis接口的实现加入到ioc容器中-->
		<bean  class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory -->
    <property name="sqlSessionFactoryBeanName" value="sessionFactory" />
		<!-- 扫描dao的实现，加入到ioc容器中 -->
			<property name="basePackage" value="com.crud.dao"></property>
		</bean>		
		
		
		
		
		<!-- 配置一个可以执行批量的sqlsession -->
		<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
			<constructor-arg name="sqlSessionFactory" ref="sessionFactory"></constructor-arg>
			<constructor-arg name="executorType" value="BATCH"></constructor-arg>
		</bean>
		
		
		
		
		<!-- 事务管理 -->
		<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="pooldataSource"/>
		</bean>		
		
		
		
<!-- 切面编程配置，根据自身业务配置，若无相关拦截需求可不配置 -->
		<aop:config>
		<!-- 切入点表达式 -->
			<aop:pointcut expression="execution(* com.crud.service..*(..))" id="txPointcut"/>
		<!-- 配置事务增强 -->
			<aop:advisor advice-ref="txAdivce" pointcut-ref="txPointcut"/>
		</aop:config>
		
		<!-- 配置事务增强，事务如何切入 -->
		<tx:advice id="txAdivce" transaction-manager="transactionManager">
			<tx:attributes>
			<!-- 所有方法都是事务方法 -->
			<tx:method name="*"/>
			<!-- 以get开启所有方法 -->
			<tx:method name="get*" read-only="true"/>
			</tx:attributes>
		</tx:advice>
		
</beans>
